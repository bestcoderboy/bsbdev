/*! tailwindcss v4.1.12 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
    :root, :host {
        --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
        'Noto Color Emoji';
        --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',
        monospace;
        --color-orange-400: oklch(75% 0.183 55.934);
        --color-yellow-400: oklch(85.2% 0.199 91.936);
        --color-green-400: oklch(79.2% 0.209 151.711);
        --color-blue-400: oklch(70.7% 0.165 254.624);
        --color-blue-500: oklch(62.3% 0.214 259.815);
        --color-slate-950: oklch(12.9% 0.042 264.695);
        --color-gray-400: oklch(70.7% 0.022 261.325);
        --color-gray-700: oklch(37.3% 0.034 259.733);
        --color-black: #000;
        --color-white: #fff;
        --spacing: 0.25rem;
        --text-sm: 0.875rem;
        --text-sm--line-height: calc(1.25 / 0.875);
        --text-base: 1rem;
        --text-base--line-height: calc(1.5 / 1);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75 / 1.125);
        --text-xl: 1.25rem;
        --text-xl--line-height: calc(1.75 / 1.25);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2 / 1.5);
        --text-4xl: 2.25rem;
        --text-4xl--line-height: calc(2.5 / 2.25);
        --text-5xl: 3rem;
        --text-5xl--line-height: 1;
        --text-6xl: 3.75rem;
        --text-6xl--line-height: 1;
        --font-weight-medium: 500;
        --font-weight-bold: 700;
        --tracking-wide: 0.025em;
        --radius-xl: 0.75rem;
        --default-font-family: var(--font-sans);
        --default-mono-font-family: var(--font-mono);
    }
}
@layer base {
    *, ::after, ::before, ::backdrop, ::file-selector-button {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        border: 0 solid;
    }
    html, :host {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji');
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }
    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }
    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }
    h1, h2, h3, h4, h5, h6 {
        font-size: inherit;
        font-weight: inherit;
    }
    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }
    b, strong {
        font-weight: bolder;
    }
    code, kbd, samp, pre {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em;
    }
    small {
        font-size: 80%;
    }
    sub, sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
    }
    sub {
        bottom: -0.25em;
    }
    sup {
        top: -0.5em;
    }
    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }
    :-moz-focusring {
        outline: auto;
    }
    progress {
        vertical-align: baseline;
    }
    summary {
        display: list-item;
    }
    ol, ul, menu {
        list-style: none;
    }
    img, svg, video, canvas, audio, iframe, embed, object {
        display: block;
        vertical-align: middle;
    }
    img, video {
        max-width: 100%;
        height: auto;
    }
    button, input, select, optgroup, textarea, ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        border-radius: 0;
        background-color: transparent;
        opacity: 1;
    }
    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }
    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }
    ::file-selector-button {
        margin-inline-end: 4px;
    }
    ::placeholder {
        opacity: 1;
    }
    @supports (not (-webkit-appearance: -apple-pay-button)) or (contain-intrinsic-size: 1px) {
        ::placeholder {
            color: currentcolor;
            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, currentcolor 50%, transparent);
            }
        }
    }
    textarea {
        resize: vertical;
    }
    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }
    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }
    ::-webkit-datetime-edit {
        display: inline-flex;
    }
    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }
    ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }
    ::-webkit-calendar-picker-indicator {
        line-height: 1;
    }
    :-moz-ui-invalid {
        box-shadow: none;
    }
    button, input:where([type='button'], [type='reset'], [type='submit']), ::file-selector-button {
        appearance: button;
    }
    ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
        height: auto;
    }
    [hidden]:where(:not([hidden='until-found'])) {
        display: none!important;
    }
}
@layer utilities {
    .absolute {
        position: absolute;
    }
    .fixed {
        position: fixed;
    }
    .relative {
        position: relative;
    }
    .top-0 {
        top: calc(var(--spacing) * 0);
    }
    .right-5 {
        right: calc(var(--spacing) * 5);
    }
    .bottom-3 {
        bottom: calc(var(--spacing) * 3);
    }
    .z-1 {
        z-index: 1;
    }
    .z-10 {
        z-index: 10;
    }
    .container {
        width: 100%;
        @media (width >= 40rem) {
            max-width: 40rem;
        }
        @media (width >= 48rem) {
            max-width: 48rem;
        }
        @media (width >= 64rem) {
            max-width: 64rem;
        }
        @media (width >= 80rem) {
            max-width: 80rem;
        }
        @media (width >= 96rem) {
            max-width: 96rem;
        }
    }
    .mx-auto {
        margin-inline: auto;
    }
    .my-3 {
        margin-block: calc(var(--spacing) * 3);
    }
    .ms-3 {
        margin-inline-start: calc(var(--spacing) * 3);
    }
    .me-2 {
        margin-inline-end: calc(var(--spacing) * 2);
    }
    .-mt-2 {
        margin-top: calc(var(--spacing) * -2);
    }
    .mt-3 {
        margin-top: calc(var(--spacing) * 3);
    }
    .mt-5 {
        margin-top: calc(var(--spacing) * 5);
    }
    .mb-1 {
        margin-bottom: calc(var(--spacing) * 1);
    }
    .mb-2 {
        margin-bottom: calc(var(--spacing) * 2);
    }
    .mb-3 {
        margin-bottom: calc(var(--spacing) * 3);
    }
    .mb-5 {
        margin-bottom: calc(var(--spacing) * 5);
    }
    .hidden {
        display: none;
    }
    .h-\[96px\] {
        height: 96px;
    }
    .h-fit {
        height: fit-content;
    }
    .h-screen {
        height: 100vh;
    }
    .min-h-2\/3 {
        min-height: calc(2/3 * 100%);
    }
    .min-h-screen {
        min-height: 100vh;
    }
    .w-1\/5 {
        width: calc(1/5 * 100%);
    }
    .w-screen {
        width: 100vw;
    }
    .cursor-pointer {
        cursor: pointer;
    }
    .space-y-3 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
        }
    }
    .space-y-5 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }
    .overflow-x-clip {
        overflow-x: clip;
    }
    .rounded-xl {
        border-radius: var(--radius-xl);
    }
    .border-gray-700\/60 {
        border-color: color-mix(in srgb, oklch(37.3% 0.034 259.733) 60%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-gray-700) 60%, transparent);
        }
    }
    .bg-\[\#061018\] {
        background-color: #061018;
    }
    .bg-radial {
        --tw-gradient-position: in oklab;
        background-image: radial-gradient(var(--tw-gradient-stops));
    }
    .from-slate-950 {
        --tw-gradient-from: var(--color-slate-950);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
    .to-black {
        --tw-gradient-to: var(--color-black);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
    .p-5 {
        padding: calc(var(--spacing) * 5);
    }
    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    .text-4xl {
        font-size: var(--text-4xl);
        line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
    }
    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }
    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    .text-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
    }
    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
    }
    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }
    .tracking-wide {
        --tw-tracking: var(--tracking-wide);
        letter-spacing: var(--tracking-wide);
    }
    .break-words {
        overflow-wrap: break-word;
    }
    .whitespace-pre-wrap {
        white-space: pre-wrap;
    }
    .text-\[\#4288bf\]\/90 {
        color: color-mix(in oklab, #4288bf 90%, transparent);
    }
    .text-\[\#7161ff\]\/90 {
        color: color-mix(in oklab, #7161ff 90%, transparent);
    }
    .text-\[\#e8d44d\]\/90 {
        color: color-mix(in oklab, #e8d44d 90%, transparent);
    }
    .text-blue-400 {
        color: var(--color-blue-400);
    }
    .text-blue-500 {
        color: var(--color-blue-500);
    }
    .text-gray-400 {
        color: var(--color-gray-400);
    }
    .text-green-400 {
        color: var(--color-green-400);
    }
    .text-orange-400 {
        color: var(--color-orange-400);
    }
    .text-white {
        color: var(--color-white);
    }
    .text-yellow-400 {
        color: var(--color-yellow-400);
    }
    .italic {
        font-style: italic;
    }
    .underline {
        text-decoration-line: underline;
    }
    .md\:my-4 {
        @media (width >= 48rem) {
            margin-block: calc(var(--spacing) * 4);
        }
    }
    .md\:mb-0 {
        @media (width >= 48rem) {
            margin-bottom: calc(var(--spacing) * 0);
        }
    }
    .md\:block {
        @media (width >= 48rem) {
            display: block;
        }
    }
    .md\:flex {
        @media (width >= 48rem) {
            display: flex;
        }
    }
    .md\:grid {
        @media (width >= 48rem) {
            display: grid;
        }
    }
    .md\:hidden {
        @media (width >= 48rem) {
            display: none;
        }
    }
    .md\:min-h-screen {
        @media (width >= 48rem) {
            min-height: 100vh;
        }
    }
    .md\:w-2\/7 {
        @media (width >= 48rem) {
            width: calc(2/7 * 100%);
        }
    }
    .md\:w-3\/4 {
        @media (width >= 48rem) {
            width: calc(3/4 * 100%);
        }
    }
    .md\:justify-stretch {
        @media (width >= 48rem) {
            justify-content: stretch;
        }
    }
    .md\:space-y-0 {
        @media (width >= 48rem) {
            :where(& > :not(:last-child)) {
                --tw-space-y-reverse: 0;
                margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
                margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
            }
        }
    }
    .md\:space-x-5 {
        @media (width >= 48rem) {
            :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 0;
                margin-inline-start: calc(calc(var(--spacing) * 5) * var(--tw-space-x-reverse));
                margin-inline-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-x-reverse)));
            }
        }
    }
    .md\:text-xl {
        @media (width >= 48rem) {
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
        }
    }
    .lg\:ms-10 {
        @media (width >= 64rem) {
            margin-inline-start: calc(var(--spacing) * 10);
        }
    }
    .lg\:text-2xl {
        @media (width >= 64rem) {
            font-size: var(--text-2xl);
            line-height: var(--tw-leading, var(--text-2xl--line-height));
        }
    }
    .lg\:text-5xl {
        @media (width >= 64rem) {
            font-size: var(--text-5xl);
            line-height: var(--tw-leading, var(--text-5xl--line-height));
        }
    }
    .xl\:flex {
        @media (width >= 80rem) {
            display: flex;
        }
    }
    .xl\:w-3\/5 {
        @media (width >= 80rem) {
            width: calc(3/5 * 100%);
        }
    }
    .xl\:space-y-0 {
        @media (width >= 80rem) {
            :where(& > :not(:last-child)) {
                --tw-space-y-reverse: 0;
                margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
                margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
            }
        }
    }
    .xl\:space-x-3 {
        @media (width >= 80rem) {
            :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 0;
                margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
                margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
            }
        }
    }
    .xl\:ps-7 {
        @media (width >= 80rem) {
            padding-inline-start: calc(var(--spacing) * 7);
        }
    }
    .xl\:text-6xl {
        @media (width >= 80rem) {
            font-size: var(--text-6xl);
            line-height: var(--tw-leading, var(--text-6xl--line-height));
        }
    }
}
.roboto-mono {
    font-family: "Roboto Mono", monospace;
    font-optical-sizing: auto;
    font-style: normal;
}
.instrument-sans {
    font-family: "Instrument Sans", sans-serif;
    font-optical-sizing: auto;
    font-style: normal;
}
.icon {
    display: inline-block;
    stroke-width: 0;
    stroke: currentColor;
    fill: currentColor;
    transform: translate(0px,-1px);
}
:where(textarea), :where(input[type="text"]) {
    appearance: none;
    border-style: solid;
    outline: none;
}
@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@property --tw-gradient-position {
    syntax: "*";
    inherits: false;
}
@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}
@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}
@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}
@property --tw-gradient-stops {
    syntax: "*";
    inherits: false;
}
@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false;
}
@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
}
@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%;
}
@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%;
}
@property --tw-font-weight {
    syntax: "*";
    inherits: false;
}
@property --tw-tracking {
    syntax: "*";
    inherits: false;
}
@property --tw-space-x-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@layer properties {
    @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
        *, ::before, ::after, ::backdrop {
            --tw-space-y-reverse: 0;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-font-weight: initial;
            --tw-tracking: initial;
            --tw-space-x-reverse: 0;
        }
    }
}
